<?php

namespace Proxies\__CG__\BO\OccasionBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Advert extends \BO\OccasionBundle\Entity\Advert implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'category', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'customer', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'id', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'title', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'content', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'price', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'brand', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'state', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'showphone', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'nbview', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'alert', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'datecreate', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'dateedit', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'picture', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'published'];
        }

        return ['__isInitialized__', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'category', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'customer', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'id', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'title', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'content', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'price', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'brand', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'state', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'showphone', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'nbview', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'alert', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'datecreate', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'dateedit', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'picture', '' . "\0" . 'BO\\OccasionBundle\\Entity\\Advert' . "\0" . 'published'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Advert $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent($content)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', [$content]);

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function getContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', []);

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setBrand($brand)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBrand', [$brand]);

        return parent::setBrand($brand);
    }

    /**
     * {@inheritDoc}
     */
    public function getBrand()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBrand', []);

        return parent::getBrand();
    }

    /**
     * {@inheritDoc}
     */
    public function setState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', [$state]);

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', []);

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdvert(\BO\OccasionBundle\Entity\Advert $advert)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdvert', [$advert]);

        return parent::setAdvert($advert);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdvert()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdvert', []);

        return parent::getAdvert();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(\BO\OccasionBundle\Entity\Category $category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setShowphone($showphone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShowphone', [$showphone]);

        return parent::setShowphone($showphone);
    }

    /**
     * {@inheritDoc}
     */
    public function getShowphone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShowphone', []);

        return parent::getShowphone();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbview($nbview)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbview', [$nbview]);

        return parent::setNbview($nbview);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbview()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbview', []);

        return parent::getNbview();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlert($alert)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlert', [$alert]);

        return parent::setAlert($alert);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlert()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlert', []);

        return parent::getAlert();
    }

    /**
     * {@inheritDoc}
     */
    public function getDatecreate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatecreate', []);

        return parent::getDatecreate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateedit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateedit', []);

        return parent::setDateedit();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateedit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateedit', []);

        return parent::getDateedit();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublished($published)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublished', [$published]);

        return parent::setPublished($published);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublished', []);

        return parent::getPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomer(\BO\OccasionBundle\Entity\Customer $customer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomer', [$customer]);

        return parent::setCustomer($customer);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', []);

        return parent::getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function addPicture(\BO\OccasionBundle\Entity\Picture $picture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPicture', [$picture]);

        return parent::addPicture($picture);
    }

    /**
     * {@inheritDoc}
     */
    public function removePicture(\BO\OccasionBundle\Entity\Picture $picture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePicture', [$picture]);

        return parent::removePicture($picture);
    }

    /**
     * {@inheritDoc}
     */
    public function getPicture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPicture', []);

        return parent::getPicture();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatecreate($datecreate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatecreate', [$datecreate]);

        return parent::setDatecreate($datecreate);
    }

}
